{"version":3,"sources":["_client.js","_starfire_menu.js","_starfire_ui.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxjfile":"client.js","sourcesContent":["var sock = io();\nlet user;\n\nlet game;\nlet Player1;\nlet Player2;\nlet Player3;\nlet Player4;\nlet FriendlyBase;\nlet enemyBase;\n\nsock.on(\"msg\", onMessage);\nsock.on(\"assign\", assignPlayer);\nsock.on(\"update\", getUpdate);\n\nfunction getUpdate(packet) {\n  console.log(\"Server sent an update\");\n  console.dir(packet);\n  game = packet.game;\n  Player1 = packet.Player1;\n  Player2 = packet.Player2;\n  FriendlyBase = packet.FriendlyBase;\n  enemyBase = packet.enemyBase;\n  if (packet.Player3) {\n    Player3 = packet.Player3;\n  }\n  if (packet.Player4) {\n    Player4 = packet.Player4;\n  }\n  update();\n}\n\nfunction assignPlayer(player) {\n  user = player;\n  console.log(user.name + \" joined game as \" + user.id);\n}\n\nfunction onMessage(text) {\n  typeWord($(\"#status\"), \">>  \" + text, \"li\");\n}\n","let typeWord = function($location, text, element, begEnd, interval, cursor) {\n  if (element === undefined) {\n    element = \"p\";\n  }\n  if (begEnd === undefined) {\n    begEnd = \"prepend\";\n  }\n  if (interval === undefined) {\n    interval = 40;\n  }\n  if (cursor === undefined) {\n    cursor = \"|\";\n  }\n  let newText = document.createElement(element);\n  if (begEnd === \"prepend\") {\n    $location.prepend(newText);\n  } else {\n    $location.append(newText);\n  }\n  let i=0;\n  let testInterval = setInterval(typeOut, interval);\n  function typeOut() {\n    if (i === text.length+1) {\n      clearInterval(testInterval);\n    } else {\n      if (i === 0) {\n        newText.textContent += text[i] + cursor;\n        i++;\n      } else if (i === text.length) {\n        newText.textContent = newText.textContent.slice(0, -1);\n        i++;\n      } else {\n        newText.textContent = newText.textContent.slice(0, -1);\n        newText.textContent += text[i] + cursor;\n        i++;\n      }\n    }\n  }\n}\n\nlet gameName = \"Starfire\";\nlet sessionName;\nlet validSession = \"test1\";\nlet $setup = $(\"<div>\", {id: \"setup\"});\nlet $server = $(\"<ul>\", {id: \"server\"});\nlet $newSessionNameInput = $(\"<input>\", {type: \"text\", id: \"newSessionName\"});\nlet $joinSessionNameInput = $(\"<input>\", {type: \"text\", id: \"joinSessionName\"});\nlet $play = $(\"<button>\", {id: \"play\", text: \"Play\"});\nlet $createGameName = $(\"<button>\", {id: \"createGameName\", text: \"Create\"});\nlet $enterGameName = $(\"<button>\", {id: \"enterGameName\", text: \"Enter\"});\nlet $newGame = $(\"<button>\", {id: \"newGame\", text: \"Create\"});\nlet $joinGame = $(\"<button>\", {id: \"joinGame\", text: \"Join\"});\nlet $notActive = $(\"<p>\", {id: \"notActive\", text: \"Not an active session\"})\n\nlet $greet = $(\"<div>\", {id: \"greet\"});\nlet $startGame = $(\"<div>\", {id: \"startGame\"});\nlet $newSession = $(\"<div>\", {id: \"setup\"});\nlet $joinSession = $(\"<div>\", {id: \"joinSession\"});\nlet $playArea = $(\"#playArea\");\n\n$playArea.hide();\n$(\"#menu\").prepend($setup);\n$setup.append($greet);\n// $setup.append(\"<h3> Welcome to \" + gameName + \"<h3>\");\ntypeWord($greet, \"Welcome to \" + gameName, \"h3\");\n$greet.append($play);\n$setup.append($server);\n// $startGame.append(\"<h3>Create a new game or join an existing one?</h3>\");\n$startGame.append($newGame);\n$startGame.append($joinGame);\n// $newSession.append(\"<h3>Please enter a name for your session.</h3>\");\n$newSession.append($newSessionNameInput);\n$newSession.append($createGameName);\n// $joinSession.append(\"<h3>Please enter the name of the session you would like to join</h3>\");\n$joinSession.append($joinSessionNameInput);\n$joinSession.append($enterGameName);\n$joinSession.append($notActive);\n$notActive.hide();\n\n$play.on(\"click\", function() {\n  $greet.hide();\n  $setup.append($startGame);\n  $startGame.hide();\n  $startGame.fadeIn();\n  typeWord($startGame, \"Create a new game or join an existing one?\", \"h3\");\n});\n\n$newGame.on(\"click\", function() {\n  $startGame.hide();\n  $setup.append($newSession);\n  $newSession.hide();\n  $newSession.fadeIn();\n  typeWord($newSession, \"Please enter a name for your session.\", \"h3\");\n});\n\n$joinGame.on(\"click\", function() {\n  $startGame.hide();\n  $setup.append($joinSession);\n  $joinSession.hide();\n  $joinSession.fadeIn();\n  typeWord($joinSession, \"Please enter the name of the session you would like to join\", \"h3\");\n  $(\"#notActive\").hide();\n});\n\n$newSessionNameInput.on(\"keyup change\", function() {\n  sessionName = $(this).val();\n});\n$joinSessionNameInput.on(\"keyup change\", function() {\n  $notActive.hide();\n  sessionName = $(this).val();\n});\n\n$createGameName.on(\"click\", function() {\n  if (sessionName) {\n    $newSession.hide();\n    $(\"#title\").hide();\n    $(\"#copyright\").hide();\n    $(\"#info\").addClass(\"messages\");\n    $playArea.fadeIn();\n    $.post(\"/\", \"start\");\n  }\n});\n\n$enterGameName.click(function() {\n  if (sessionName === validSession) {\n    $joinSession.hide();\n    $(\"#title\").hide();\n    $(\"#copyright\").hide();\n    $(\"#info\").addClass(\"messages\");\n    $playArea.fadeIn();\n  } else {\n    $notActive.fadeIn(400, function() {\n      $notActive.fadeOut(300, function() {\n        $notActive.fadeIn(400)\n      })\n    })\n  }\n});\n\n\n//Quick start\n// $(\"#playArea\").hide();\n// $(\"#title\").hide();\n// $(\"#info\").hide();\n// $(\"#playArea\").fadeIn();\n","// globals changed throughout the game by player events, passed to back-end code\nlet action;\nlet buttonPressed;\n\n// lightbox to display \"market\" cards\nlet $overlay = $(\"<div>\", {\n  id: \"overlay\"\n});\n$(\"body\").append($overlay);\n$overlay.hide();\n\n//establish buttons for card use\nlet $buttons = $(\"#buttons\");\nlet $useButton = $(\"<button>\", {\n  id: \"use\",\n  title: \"Use the selected card\",\n  text: \"USE\"\n});\nlet $discardButton = $(\"<button>\", {\n  id: \"discard\",\n  title: \"Discard the selected card\",\n  text: \"DSC\"\n});\nlet $cancelButton = $(\"<button>\", {\n  id: \"cancel\",\n  title: \"Cancel this action\",\n  text: \"ESC\"\n});\nlet $fireButton = $(\"<button>\", {\n  id: \"fire\",\n  title: \"Fire at a valid target\",\n  text: \"ATK\"\n});\nlet $evadeButton = $(\"<button>\", {\n  id: \"Evade\",\n  title: \"Attempt to evade a pursuer\",\n  text: \"EVD\"\n});\nlet $cicButton = $(\"<button>\", {\n  id: \"cic\",\n  title: \"View advanced tactics\",\n  text: \"CIC\"\n});\nlet $confirmTargetButton = $(\"<button>\", {\n  id: \"confirmTarget\",\n  title: \"Confirm target\",\n  text: \"CFM\"\n});\nlet $confirmAdvButton = $(\"<button>\", {\n  id: \"confirmAdvTactic\",\n  title: \"Confirm choice\",\n  text: \"CFM\"\n});\n\n$buttons.append($useButton);\n$buttons.append($discardButton);\n$buttons.append($fireButton);\n$buttons.append($evadeButton);\n$buttons.append($cicButton);\n$buttons.append($confirmTargetButton);\n$buttons.append($confirmAdvButton);\n$buttons.append($cancelButton);\n\n\n\n/********************\nUPDATE FUNCTIONS\n********************/\n\nconst clearButtons = function() {\n  //clear all action buttons\n  $buttons.children().hide();\n}\n\n\n\nconst updateSummaries = function() {\n  $(\"#enemyBase\").html(enemyBase.summary);\n  let wingman = 1;\n  const showSummary = function(player) {\n    // show player summary\n    let summaryField;\n    if (player.id === user.id) {\n      summaryField = \"#userSummary\";\n    } else {\n      summaryField = \"#wingman\" + wingman + \"-summary\";\n    }\n    let $summary = $(summaryField);\n    $summary.html(player.summary).removeClass().addClass(\"playerSummary\").addClass(player.id);\n  }\n  for (let i = 0; i < game.friendlies.length; i++) {\n    let friendly = game.friendlies[i];\n    if (friendly.id === FriendlyBase.id) {\n      $(\"#FriendlyBase\").html(FriendlyBase.summary);\n    } else if (friendly.id === user.id) {\n      showSummary(friendly)\n    } else {\n      showSummary(friendly);\n      wingman++\n    }\n  }\n}\n\n\nconst updateTacticalCards = function() {\n  // update and show all tactical hands\n  let wingman = 1;\n  for (let i = 0; i < game.friendlies.length; i++) {\n    let $wingmanHand = $(\"#wingman\" + wingman + \"-hand\");\n    let player = game.friendlies[i];\n    if (player.id === \"FriendlyBase\") {\n      continue;\n    } else if (player.id === user.id) {\n      $(\"#playerHand\").empty();\n      for (let i = 0; i < player.hand.length; i++) {\n        let tCard = player.hand[i];\n        $(\"#playerHand\").append(\"<li class='tactical \" + tCard.cssClass + \"'>\"\n                  + \"<h3>\" + tCard.name + \"</h3>\"\n                  + \"<p>\" + tCard.description + \"</p>\"\n                  + \"</li>\");\n      }\n    } else {\n      $wingmanHand.empty();\n      for (let i = 0; i < player.hand.length; i++) {\n        let tCard = player.hand[i];\n        if (tCard) {\n          $wingmanHand.append(\"<li class='tactical \" + tCard.cssClass + \"'>\"\n                    + \"<h3>\" + tCard.name + \"</h3>\"\n                    + \"<p>\" + tCard.description + \"</p>\"\n                    + \"</li>\");\n        }\n      }\n      wingman += 1\n    }\n  }\n}\n\n\nconst updateEnemyCards = function() {\n  // update and show current pursuers\n  const refreshPursuerList = function(location, friendly) {\n    location.empty();\n    location.removeClass();\n    location.addClass(friendly.id);\n    for (let i = 0; i < friendly.pursuers.length; i++) {\n      let eCard = friendly.pursuers[i];\n      if (eCard.cssClass === \"emptySpace\" || eCard.cssClass === \"destroyed\") {\n        location.append(\"<li class='enemy \" + eCard.cssClass + \"'>\"\n                  + \"<h3>\" + eCard.name + \"</h3>\"\n                  + \"</li>\")\n      } else {\n        location.append(\"<li class='enemy \" + eCard.cssClass + \"'>\"\n                + \"<h3>\" + eCard.name + \"</h3>\"\n                + \"<p>ARM: \" + (eCard.armor - friendly.pursuerDamage[i])\n                + \"/\" + eCard.armor + \"</p>\"\n                + \"<p>PWR: \" + eCard.power + \"</p>\"\n                + \"<p>TGT: \" + eCard.targeting + \"</p>\"\n                + \"<p>MRT: \" + eCard.merit + \"</p>\"\n                + \"</li>\")\n      }\n    }\n  }\n  let wingman = 1;\n  const $playerPursuers = $(\"#playerPursuers\");\n  const $basePursuers = $(\"#basePursuers\");\n  for(let i=0; i<game.friendlies.length; i++) {\n    let friendly = game.friendlies[i];\n    if (friendly.id === FriendlyBase.id) {\n      refreshPursuerList($basePursuers, friendly);\n    } else if (friendly.id === user.id) {\n      refreshPursuerList($playerPursuers, friendly);\n    } else {\n      let $wingmanPursuers = $(\"#wingman\" + wingman + \"-pursuers\");\n      refreshPursuerList($wingmanPursuers, friendly);\n      wingman++;\n    }\n  }\n}\n\nconst clearOverlay = function() {\n  $overlay.slideUp(400, function() {\n    $(\"#userSummary\").removeClass(\"bumped\");\n  });\n}\n\nconst update = function() {\n  // update entire play area\n  clearButtons();\n  detarget();\n  updateEnemyCards();\n  updateTacticalCards();\n  updateSummaries();\n  enableSelect();\n}\n\n\n\n/********************\nCARD SELECTION\n********************/\n\n\nconst deselect = function() {\n  // remove \"selected\" class from all cards when a card is clicked\n  $(\".selected\").removeClass(\"selected\");\n}\n\n\nconst detarget = function() {\n  $(\".target\").removeClass(\"target\");\n  $(\".enemy\").off(\"click\");\n  $(\".assist\").removeClass(\"assist\");\n  $(\".playerSummary\").off(\"click\");\n  $(\".friendlyBase\").off(\"click\");\n  $(\".invalidTarget\").removeClass(\"invalidTarget\");\n  $(\".targeted\").removeClass(\"targeted\");\n}\n\n\nconst getCardFunction = function(className) {\n  let card = document.querySelector(className);\n  return card.classList()[1]; // classlist will be .tactical .[action] ...\n}\n\n\nconst getFriendly = function(className) {\n  // determine which Friendly holds the selected card\n  let $card = $(className);\n  let friendly = undefined;\n  if ($card) {\n    $friendly = $card.parent();\n  }\n  if ($card.hasClass(\"Player1\") || $friendly.hasClass(\"Player1\")) {\n    return Player1;\n  } else if ($card.hasClass(\"Player2\") || $friendly.hasClass(\"Player2\")) {\n    return Player2;\n  } else if ($card.hasClass(\"Player3\") || $friendly.hasClass(\"Player3\")) {\n    return Player3;\n  } else if ($card.hasClass(\"Player4\") || $friendly.hasClass(\"Player4\")) {\n    return Player4;\n  } else if ($card.hasClass(\"FriendlyBase\") || $friendly.hasClass(\"FriendlyBase\")) {\n    return FriendlyBase;\n  } else if ($card.attr(\"id\") === \"enemyBase\") {\n    return enemyBase;\n  } else {\n    return undefined;\n  }\n}\n\n\n\n/********************\nCARD BINDING\n********************/\n\n\nconst enableSelect = function() {\n  $(\".disabled\").removeClass(\"disabled\");\n  $(\"#playerHand .tactical\").on(\"click\", function() {\n    deselect();\n    $(this).addClass(\"selected\");\n    let $selected = $(\".selected\");\n    if ($selected.hasClass(\"feint\")) {\n      if (user.lastCardUsed) {\n        $selected.html(\"<h3>Feint</h3><p>\" + user.lastCardUsed.description + \"</p>\");\n        $useButton.show();\n      } else {\n        $useButton.hide();\n        $selected.html(\"<h3>Feint</h3><p>Nothing to feint</p>\");\n      }\n    } else {\n      $useButton.show();\n    }\n    $discardButton.show();\n  });\n}\n\n\nconst disableSelect = function() {\n  //disable clicking other cards while an action is being taken\n  $(\".tactical\").not(\".selected\").addClass(\"disabled\");\n  $(\".tactical\").off(\"click\");\n}\n\n\nconst selectAlly = function(scope) {\n  if (scope === \"all\") {\n    $(\".playerSummary\").addClass(\"assist\");\n  } else {\n    $(\".playerSummary\").not($(\".\" + user.id)).addClass(\"assist\");\n  }\n  $(\"#FriendlyBase\").addClass(\"assist\");\n  $(\".assist\").on(\"click\", function() {\n    detarget();\n    clearButtons();\n    $(this).toggleClass(\"targeted\");\n    $confirmTargetButton.show();\n    $cancelButton.show();\n  });\n}\n\nconst getPlayer = function() { // for local playable version only\n  let $summary = $(\".selected\").parent().next();\n  if ($summary.hasClass(\"Player1\")) {\n    return Player1;\n  } else if ($summary.hasClass(\"Player2\")) {\n    return Player2;\n  } else if ($summary.hasClass(\"Player3\")) {\n    return Player3;\n  } else if ($summary.hasClass(\"Player1\")) {\n    return Player4;\n  } else {\n    return user;\n  }\n}\n\nconst showTargets = function(action) {\n  let player = getPlayer();\n  const selectTargets = function(...ids) {\n    let enemies = Array.from($(\".enemy\"));\n    enemies.forEach((enemy) => {\n      let classes = Array.from(enemy.classList);\n      if (ids.includes(enemy.id) ||\n        (ids.includes(enemy.parentElement.id) && !classes.includes(\"emptySpace\")\n            && !classes.includes(\"destroyed\"))) {\n        enemy.className += \" target\";\n        $(\".target\").on(\"click\", function() {\n          clearButtons();\n          $(this).addClass(\"targeted\")\n          $(\".targeted\").not($(this)).removeClass(\"targeted\");\n          $confirmTargetButton.show();\n          $cancelButton.show();\n        });\n      } else {\n        enemy.className += \" invalidTarget\";\n      }\n    });\n  }\n  if (action === \"feint\") {\n    action = player.lastCardUsed.cssClass;\n  }\n  // SERVER VERSION SELECTION LOGIC, DISABLED FOR LOCAL VERSION\n  // if ([\"fire\", \"missile\", \"heatSeeker\", \"bomb\", \"scatterShot\"].includes(action)) {\n  //   if (player.effects.status == \"Free\") {\n  //     selectTargets(\"basePursuers\", \"wingman1-pursuers\", \"wingman2-pursuers\", \"wingman3-pursuers\",\n  //       \"enemyBase\");\n  //   } else {\n  //     selectTargets(\"basePursuers\", \"wingman1-pursuers\", \"wingman2-pursuers\", \"wingman3-pursuers\");\n  //   }\n  // }\n  // if ([\"snapshot\"].includes(action)) {\n  //   selectTargets(\"basePursuers\", \"playerPursuers\", \"wingman1-pursuers\", \"wingman2-pursuers\", \"wingman3-pursuers\",\n  //     \"enemyBase\");\n  // }\n  // if ([\"drawFire\", \"emp\"].includes(action)) {\n  //   selectTargets(\"basePursuers\", \"wingman1-pursuers\", \"wingman2-pursuers\", \"wingman3-pursuers\");\n  // }\n  // if ([\"immelman\", \"evade\", \"barrelRoll\"].includes(action)) {\n  //   selectTargets(\"playerPursuers\");\n  // }\n  if ([\"repairDrone\"].includes(action)) {\n    selectAlly(\"all\");\n  } else { // for local playable version only\n    selectTargets(\"playerPursuers\", \"basePursuers\", \"wingman1-pursuers\", \"wingman2-pursuers\", \"wingman3-pursuers\",\n      \"enemyBase\")\n  }\n}\n\n\n\n/********************\nBUTTON FUNCTIONS\n********************/\n\n\n$useButton.on(\"click\", function() {\n  clearButtons();\n  buttonPressed = \"use\";\n  $cancelButton.show();\n  disableSelect();\n  action = $(\".selected\")[0].classList[1];\n  showTargets(action);\n});\n\n\n$discardButton.on(\"click\", function() {\n  clearButtons();\n  buttonPressed = \"discard\";\n  $fireButton.show();\n  $evadeButton.show();\n  $cicButton.show();\n  $cancelButton.show();\n  disableSelect();\n});\n\n\n$fireButton.on(\"click\", function() {\n  clearButtons();\n  $cancelButton.show();\n  disableSelect();\n  action = \"fire\";\n  buttonPressed = \"fire\";\n  showTargets(action);\n});\n\n$evadeButton.on(\"click\", function() {\n  clearButtons();\n  $cancelButton.show();\n  disableSelect();\n  action = \"evade\";\n  buttonPressed = \"evade\";\n  showTargets(action);\n});\n\nconst cancel = function() {\n  clearOverlay();\n  clearButtons();\n  deselect();\n  detarget();\n  action = \"\";\n  enableSelect();\n}\n\n$cancelButton.on(\"click\", cancel);\n\n$(document).keyup(function(e) {\n  if (e.keyCode == 27) {\n    cancel();\n  }\n})\n\n$cicButton.on(\"click\", function() {\n  action = \"useAdvTactic\";\n  buttonPressed = \"useAdvTactic\";\n  $(\"#userSummary\").addClass(\"bumped\");\n  clearButtons();\n  $cancelButton.show();\n  $overlay.empty();\n  let $marketList = $(\"<ul>\");\n  $overlay.append(typeWord($overlay[0], \"Incoming transmition from \" + game.name + \" command...\", \"p\", undefined, 30));\n  $overlay.append($marketList);\n  FriendlyBase.market.forEach( function(card) {\n    let advCard;\n    if (player.merit >= card.cost) {\n      advCard = \"<li class='advTactical \" + card.cssClass + \" purchasable'>\"\n              + \"<h3>\" + card.name + \"</h3>\"\n              + \"<p>\" + card.description + \"</p>\"\n              + \"<p class='cost'> Merit cost: \" + card.cost + \"</p>\"\n              + \"</li>\";\n    } else {\n      advCard = \"<li class='advTactical \" + card.cssClass + \" unavailable'>\"\n              + \"<h3>\" + card.name + \"</h3>\"\n              + \"<p>\" + card.description + \"</p>\"\n              + \"<p class='cost'> Merit cost: \" + card.cost + \"</p>\"\n              + \"</li>\";\n    }\n    $marketList.append(advCard);\n  });\n  $overlay.slideDown(600);\n  $marketList.hide().fadeIn(1000);\n  $(\".purchasable\").on(\"click\", function() {\n      clearButtons();\n      $cancelButton.show();\n      detarget();\n      $(this).siblings().removeClass(\"purchasing\");\n      $(this).addClass(\"purchasing\");\n      action = $(this)[0].classList[1]; // $(this).attr(\"class\").split(\" \")[1]\n      if([\"heatSeeker\", \"bomb\", \"scatterShot\", \"snapshot\", \"emp\", \"repairDrone\"].includes(action)) {\n        $confirmAdvButton.hide();\n        showTargets(action);\n      } else {\n        detarget();\n        $confirmAdvButton.show();\n      }\n  });\n});\n\nconst sendPacket = function() { //for server version: modify to send packet to server\n  let turnInfo = {\n    player: getPlayer(),\n    button: buttonPressed,\n    cardIndex: $(\".selected\").index(),\n    friendly: getFriendly(\".targeted\"),\n    pursuerIndex: $(\".targeted\").index(),\n    purchaseIndex: $(\".purchasing\").index(),\n  }\n  console.log(\"Sending packet to server\");\n  console.dir(turnInfo);\n  sock.emit(\"turn\", JSON.stringify(turnInfo));\n\n  clearOverlay();\n  detarget();\n  clearButtons();\n  update();\n}\n\n\n$confirmTargetButton.on(\"click\", function() {\n  sendPacket();\n});\n\n$confirmAdvButton.on(\"click\", function() {\n  sendPacket();\n});\n"]}